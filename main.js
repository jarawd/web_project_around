!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,r(n.key),n)}}function r(t){var r=function(t,r){if("object"!=e(t)||!t)return t;var o=t[Symbol.toPrimitive];if(void 0!==o){var n=o.call(t,"string");if("object"!=e(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(r)?r:r+""}var o=function(){return e=function e(t,r,o){var n=o.handleCardClick,i=o.handleCardClose,u=o.likes,a=o.dislikes,c=o.obj;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=t,this._cardSelector=r,this._handleCardClick=n,this._handleCardClose=i,this._likes=u,this._dislikes=a,this._obj=c},(r=[{key:"_getTemplate",value:function(){return this._cardTemplate=document.querySelector(this._cardSelector).content.querySelector(".elements__card").cloneNode(!0),this._cardTemplate}},{key:"generateCard",value:function(){if(this._card=this._getTemplate(),this._card.querySelector(".elements__img").src=this._data.link,this._card.querySelector(".elements__img").alt=this._data.name,this._card.querySelector(".elements__title").textContent=this._data.name,this._card.querySelector(".elements__likes-counter").textContent=this._data.likes.length,"38cc323bf81d67435752af78"===this._data.owner._id){var e=document.createElement("div");e.classList.add("elements__trash"),this._card.insertAdjacentElement("afterbegin",e)}return this.setEventListeners(),this._card}},{key:"getImage",value:function(){return this._card.querySelector(".elements__img")}},{key:"setEventListeners",value:function(){var e=this;this._card.querySelector(".elements__img").addEventListener("click",(function(){e._handleCardClick()})),this._card.querySelector(".elements__like").addEventListener("click",(function(){e._card.querySelector(".elements__like").classList.toggle("elements__like-fill"),e._card.querySelector(".elements__like").classList.contains("elements__like-fill")?e._likes(e._obj).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(t){e._card.querySelector(".elements__likes-counter").textContent=t.likes.length})).catch((function(e){console.log(e)})):e._dislikes(e._obj).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(t){e._card.querySelector(".elements__likes-counter").textContent=t.likes.length})).catch((function(e){console.log(e)}))})),"38cc323bf81d67435752af78"===this._data.owner._id&&this._card.querySelector(".elements__trash").addEventListener("click",(function(){e._handleCardClose()}))}}])&&t(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,r}();function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function i(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,u(o.key),o)}}function u(e){var t=function(e,t){if("object"!=n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==n(t)?t:t+""}var a=function(){return e=function e(t,r){var o,n,i,a=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=this,i=function(){var e=Array.from(a._form.querySelectorAll(a._input));a._toggleButton(e),a._form.addEventListener("submit",(function(e){e.preventDefault()})),e.forEach((function(t){t.addEventListener("input",(function(){a._validityInput(t),a._toggleButton(e)}))}))},(n=u(n="enableValidation"))in o?Object.defineProperty(o,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):o[n]=i,this._inputErrorClass=t.inputErrorClass,this._submitButton=t.submitButtonSelector,this._inactiveButton=t.inactiveButtonClass,this._input=t.input,this._form=r},(t=[{key:"_showInputError",value:function(e,t){e.classList.add(this._inputErrorClass),this._form.querySelector(".".concat(e.id,"-error")).textContent=t}},{key:"_hideInputError",value:function(e){e.classList.remove(this._inputErrorClass),this._form.querySelector(".".concat(e.id,"-error")).textContent=""}},{key:"_validityInput",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_validityAllInputs",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButton",value:function(e){this._validityAllInputs(e)?(this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButton)):(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButton))}}])&&i(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,p(o.key),o)}}function p(e){var t=function(e,t){if("object"!=c(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=c(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==c(t)?t:t+""}var s=function(){return e=function e(t,r){var o=t.data,n=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=o,this._renderer=n,this._cardsContainer=r},(t=[{key:"addItem",value:function(e){this._cardsContainer.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._items.reverse().forEach((function(t){e._renderer(t)}))}}])&&l(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function y(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,m(o.key),o)}}function m(e){var t=function(e,t){if("object"!=f(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=f(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==f(t)?t:t+""}var _=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t},(t=[{key:"open",value:function(e){document.querySelector(".page").prepend(e)}},{key:"close",value:function(){this._popupSelector.remove()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&(this.close(),document.removeEventListener("keydown",this._handleEscClose))}},{key:"setEventListeners",value:function(){var e=this;document.addEventListener("keydown",(function(t){e._handleEscClose(t)}))}}])&&y(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function b(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,h(o.key),o)}}function h(e){var t=function(e,t){if("object"!=d(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=d(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==d(t)?t:t+""}function v(e,t,r){return t=w(t),function(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,S()?Reflect.construct(t,r||[],w(e).constructor):t.apply(e,r))}function S(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(S=function(){return!!e})()}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(o){var n=Object.getOwnPropertyDescriptor(o,t);return n.get?n.get.call(arguments.length<3?e:r):n.value}},g.apply(this,arguments)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}var k=function(e){function t(e,r){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=v(this,t,[e]))._popupSelector=e,o._target=r,o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(t,e),r=t,(o=[{key:"open",value:function(){this._popupSelector.querySelector(".image-container__img").src=this._target.src,this._popupSelector.querySelector(".image-container__img").alt=this._target.alt,this._popupSelector.querySelector(".image-container__title").textContent=this._target.alt,this.setEventListeners(),g(w(t.prototype),"open",this).call(this,this._popupSelector)}},{key:"setEventListeners",value:function(){var e=this;this._popupSelector.querySelector(".image-container__close").addEventListener("click",(function(){g(w(t.prototype),"close",e).call(e)})),document.addEventListener("click",(function(r){r.target===e._popupSelector&&g(w(t.prototype),"close",e).call(e)})),g(w(t.prototype),"setEventListeners",this).call(this)}}])&&b(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,o}(_);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function O(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,C(o.key),o)}}function C(e){var t=function(e,t){if("object"!=E(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=E(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==E(t)?t:t+""}function P(e,t,r){return t=T(t),function(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,q()?Reflect.construct(t,r||[],T(e).constructor):t.apply(e,r))}function q(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(q=function(){return!!e})()}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(o){var n=Object.getOwnPropertyDescriptor(o,t);return n.get?n.get.call(arguments.length<3?e:r):n.value}},L.apply(this,arguments)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}var B=function(e){function t(e,r){var o,n=e.data,i=e.setData;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=P(this,t,[r]))._popupSelector=r,o._data=n,o._setData=i,o.buttonName=n.buttonName,o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(t,e),r=t,(o=[{key:"open",value:function(){this._setForm(),this.setEventListeners(),L(T(t.prototype),"open",this).call(this,this._popupSelector)}},{key:"close",value:function(){this._resetForm(),L(T(t.prototype),"close",this).call(this)}},{key:"_setForm",value:function(){this._data.values&&(this._popupSelector.querySelector(".popup__form-item_name").value=this._setData().getUserInfo().name,this._popupSelector.querySelector(".popup__form-item_info").value=this._setData().getUserInfo().job),this._data.inputInfo&&(this._popupSelector.querySelector(".popup__form-item_info").setAttribute("minlength","2"),this._popupSelector.querySelector(".popup__form-item_info").setAttribute("maxlength","200")),this._popupSelector.querySelector(".popup__title").textContent=this._data.title,this._popupSelector.querySelector(".popup__form-item_name").placeholder=this._data.placeholder1,this._popupSelector.querySelector(".popup__form-item_info").placeholder=this._data.placeholder2,this._popupSelector.querySelector(".popup__form-item_info").type=this._data.type,this._popupSelector.querySelector(".popup__form-button").textContent=this.buttonName,this._popupSelector.querySelector(".popup__form-item_name").setAttribute("minlength","2"),this._popupSelector.querySelector(".popup__form-item_name").setAttribute("maxlength","40"),this._popupSelector.classList.add("popup__opened")}},{key:"_getInputValues",value:function(){return{name:this._popupSelector.querySelector(".popup__form-item_name").value,link:this._popupSelector.querySelector(".popup__form-item_info").value}}},{key:"_resetForm",value:function(){var e=this;this._popupSelector.querySelectorAll(".popup__span-error").forEach((function(e){e.textContent=""})),this._popupSelector.querySelectorAll(".popup__form-item").forEach((function(t){t.classList.remove("popup__form-item_invalid"),e._data.resetInputs&&(t.value="")}))}},{key:"setEventListeners",value:function(){var e=this;this._popupSelector.querySelector(".popup__form").addEventListener("submit",(function(){e._data.values?(e._setData().setUserInfo(),e.close()):e._setData(e._getInputValues()),e._resetForm()})),this._popupSelector.querySelector(".popup__close").addEventListener("click",(function(){e.close()})),document.addEventListener("click",(function(t){t.target===e._popupSelector&&e.close()})),L(T(t.prototype),"setEventListeners",this).call(this)}}])&&O(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,o}(_);function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function R(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,D(o.key),o)}}function D(e){var t=function(e,t){if("object"!=x(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=x(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==x(t)?t:t+""}var N=function(){return e=function e(t,r){var o=t.nameSelector,n=t.jobSelector,i=t.setUser;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=o,this._jobSelector=n,this._popupSelector=r,this._setUser=i},(t=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,job:this._jobSelector.textContent}}},{key:"setUserInfo",value:function(){this._nameSelector.textContent=this._popupSelector.querySelector(".popup__form-item_name").value,this._jobSelector.textContent=this._popupSelector.querySelector(".popup__form-item_info").value,this._setUser(this._popupSelector)}}])&&R(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function U(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,z(o.key),o)}}function z(e){var t=function(e,t){if("object"!=A(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=A(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==A(t)?t:t+""}function F(e,t,r){return t=J(t),function(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,V()?Reflect.construct(t,r||[],J(e).constructor):t.apply(e,r))}function V(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(V=function(){return!!e})()}function G(){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}(e,t);if(o){var n=Object.getOwnPropertyDescriptor(o,t);return n.get?n.get.call(arguments.length<3?e:r):n.value}},G.apply(this,arguments)}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}function H(e,t){return H=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},H(e,t)}var M=function(e){function t(e,r){var o,n=r.card,i=r.element,u=r.removeCard;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=F(this,t,[e]))._popupSelector=e,o._card=n,o._element=i._card,o._removeCard=u,o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&H(e,t)}(t,e),r=t,(o=[{key:"open",value:function(){this._popupSelector.classList.add("popup__opened"),this._setEventListeners(),G(J(t.prototype),"open",this).call(this,this._popupSelector)}},{key:"_deleteCard",value:function(){var e=this;this._removeCard(this._card).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(){e._element.remove()})).catch((function(e){console.log(e)}))}},{key:"_setEventListeners",value:function(){var e=this;this._popupSelector.querySelector(".popup-confirm__button").addEventListener("click",(function(){e._deleteCard(),G(J(t.prototype),"close",e).call(e)})),this._popupSelector.querySelector(".popup-confirm__close").addEventListener("click",(function(){G(J(t.prototype),"close",e).call(e)})),G(J(t.prototype),"setEventListeners",this).call(this)}}])&&U(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,o}(_);function K(e){return K="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},K(e)}function Q(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,W(o.key),o)}}function W(e){var t=function(e,t){if("object"!=K(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=K(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==K(t)?t:t+""}function X(e,t,r){return t=$(t),function(e,t){if(t&&("object"===K(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Y()?Reflect.construct(t,r||[],$(e).constructor):t.apply(e,r))}function Y(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Y=function(){return!!e})()}function Z(){return Z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=$(e)););return e}(e,t);if(o){var n=Object.getOwnPropertyDescriptor(o,t);return n.get?n.get.call(arguments.length<3?e:r):n.value}},Z.apply(this,arguments)}function $(e){return $=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},$(e)}function ee(e,t){return ee=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ee(e,t)}var te=function(e){function t(e,r){var o,n=r.modifyAvatar;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=X(this,t,[e]))._popupSelector=e,o._modifyAvatar=n,o.buttonName=o._popupSelector.querySelector(".popup-profile__button"),o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ee(e,t)}(t,e),r=t,(o=[{key:"open",value:function(){this._popupSelector.classList.add("popup__opened"),this._setEventListeners(),Z($(t.prototype),"open",this).call(this,this._popupSelector)}},{key:"close",value:function(){this._resetForm(),Z($(t.prototype),"close",this).call(this)}},{key:"_resetForm",value:function(){this._popupSelector.querySelector(".popup-profile__span-error").textContent="";var e=this._popupSelector.querySelector(".popup-profile__form-item");e.classList.remove("popup__form-item_invalid"),e.value="",this.buttonName.textContent="Guardar"}},{key:"_setEventListeners",value:function(){var e=this;this._popupSelector.querySelector(".popup-profile__close").addEventListener("click",(function(){e.close()})),this._popupSelector.querySelector(".popup-profile__button").addEventListener("click",(function(t){e._modifyAvatar()})),Z($(t.prototype),"setEventListeners",this).call(this)}}])&&Q(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,o}(_);function re(e){return re="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},re(e)}function oe(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,ne(o.key),o)}}function ne(e){var t=function(e,t){if("object"!=re(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=re(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==re(t)?t:t+""}var ie=function(){return e=function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl="https://around.nomoreparties.co/v1/web_es_12"},(t=[{key:"setProfileInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:{authorization:"e42f8e22-9ca0-486e-b216-ea9a771afa3a"}})}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:{authorization:"e42f8e22-9ca0-486e-b216-ea9a771afa3a"}})}},{key:"getCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:"e42f8e22-9ca0-486e-b216-ea9a771afa3a","Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})})}},{key:"getAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:"e42f8e22-9ca0-486e-b216-ea9a771afa3a","Content-Type":"application/json"},body:JSON.stringify({avatar:e})})}},{key:"getLikes",value:function(e){return fetch("https://around.nomoreparties.co/v1/web_es_12/cards/likes/".concat(e._id),{method:"PUT",headers:{authorization:"e42f8e22-9ca0-486e-b216-ea9a771afa3a","Content-Type":"application/json"},body:JSON.stringify({likes:e.likes>0?e.likes.push({about:e.owner.about,avatar:e.owner.avatar,cohort:e.owner.cohort,name:e.owner.name,_id:e.owner._id}):{about:e.owner.about,avatar:e.owner.avatar,cohort:e.owner.cohort,name:e.owner.name,_id:e.owner._id}})})}},{key:"getDislikes",value:function(e){return fetch("https://around.nomoreparties.co/v1/web_es_12/cards/likes/".concat(e._id),{method:"DELETE",headers:{authorization:"e42f8e22-9ca0-486e-b216-ea9a771afa3a","Content-Type":"application/json"}})}},{key:"deleteCard",value:function(e){return fetch("https://around.nomoreparties.co/v1/web_es_12/cards/".concat(e._id),{method:"DELETE",headers:{authorization:"e42f8e22-9ca0-486e-b216-ea9a771afa3a","Content-Type":"application/json"}})}},{key:"setUser",value:function(e){return fetch("https://around.nomoreparties.co/v1/web_es_12/users/me",{method:"PATCH",headers:{authorization:"e42f8e22-9ca0-486e-b216-ea9a771afa3a","Content-Type":"application/json"},body:JSON.stringify({name:e.querySelector(".popup__form-item_name").value,about:e.querySelector(".popup__form-item_info").value})})}}])&&oe(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),ue=document.querySelector(".page"),ae=document.getElementById("profile-image"),ce=ue.querySelector(".profile__edit"),le=ue.querySelector(".profile__title"),pe=ue.querySelector(".profile__hobby"),se=ue.querySelector(".profile__add"),fe=document.querySelector("#popup-template").content,ye=document.querySelector("#image-template").content,me=document.querySelector("#popup-confirm-template").content,_e=document.querySelector("#popup-profile-template").content,de=fe.querySelector(".popup").cloneNode(!0),be=fe.querySelector(".popup").cloneNode(!0),he=ye.querySelector(".image-popup").cloneNode(!0),ve=me.querySelector(".popup-confirm").cloneNode(!0),Se=_e.querySelector(".popup-profile").cloneNode(!0),ge=document.querySelector(".profile__image"),we=ue.querySelector(".elements"),je=new ie;je.setProfileInfo().then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){le.textContent=e.name,pe.textContent=e.about,ae.src=e.avatar})).catch((function(e){console.log(e)})),je.getInitialCards().then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){var t=new s({data:e,renderer:function(e){var r=new o(e,"#card-template",{handleCardClick:function(){new k(he,r.getImage()).open()},handleCardClose:function(){new M(ve,{card:e,element:r,removeCard:je.deleteCard}).open()},likes:je.getLikes,dislikes:je.getDislikes,obj:e}),n=r.generateCard();t.addItem(n)}},we);t.renderItems()})).catch((function(e){console.log(e)})),ue.addEventListener("click",(function(e){if(e.target===ce&&(new B({data:{title:"Edit profile",placeholder1:"Name",placeholder2:"Hobby",type:"text",buttonName:"Save",values:!0,resetInputs:!1},setData:function(){return new N({nameSelector:le,jobSelector:pe,setUser:je.setUser},de)}},de).open(),new a({submitButtonSelector:de.querySelector(".popup__form-button"),inactiveButtonClass:"popup-btn-disabled",inputErrorClass:"popup__form-item_invalid",input:".popup__form-item"},de.querySelector(".popup__form")).enableValidation()),e.target===se){var t=new B({data:{title:"Nuevo Lugar",placeholder1:"Título",placeholder2:"Enlace de la imagen",type:"url",buttonName:"Crear",resetInputs:!0},setData:function(e){var r=new s({data:[e],renderer:function(e){Object.values(e).every((function(e){return 0!==e.length}))&&(t.buttonName="Guardando...",t.open(),je.getCard(e).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){var n=new o(e,"#card-template",{handleCardClick:function(){new k(he,n.getImage()).open()},handleCardClose:function(){new M(ve,{card:e,element:n,removeCard:je.deleteCard}).open()},likes:je.getLikes,dislikes:je.getDislikes,obj:e}),i=n.generateCard();r.addItem(i),t.close()})).catch((function(e){console.log(e)})))}},we);r.renderItems()}},be);t.open(),new a({submitButtonSelector:be.querySelector(".popup__form-button"),inactiveButtonClass:"popup-btn-disabled",inputErrorClass:"popup__form-item_invalid",input:".popup__form-item"},be.querySelector(".popup__form")).enableValidation()}if(e.target===ge){var r=new te(Se,{modifyAvatar:function(){var e=Se.querySelector(".popup-profile__form-item").value;r.buttonName.textContent="Guardando...",r.open(),je.getAvatar(e).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){ae.src=e.avatar,r.close()})).catch((function(e){console.log(e)}))}});r.open(),new a({submitButtonSelector:Se.querySelector(".popup-profile__button"),inactiveButtonClass:"popup-btn-disabled",inputErrorClass:"popup__form-item_invalid",input:".popup-profile__form-item"},Se.querySelector(".popup-profile__form")).enableValidation()}}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBVVQsT0FFUSxJQUFJdkksRUFDcEIsQ0FDRWlCLHFCQUFzQjBHLEdBQVc5SixjQUFjLHVCQUMvQ3NELG9CQUFxQixxQkFDckJKLGdCQUFpQiwyQkFDakJLLE1BQU8scUJBRVR1RyxHQUFXOUosY0FBYyxpQkFHakJrTCxrQkFDWixDQUVBLEdBQUl0SSxFQUFFeUMsU0FBVzZFLEdBQWUsQ0FDOUIsSUFBTXNCLEVBQWUsSUFBSXhELEdBQWtCaUMsR0FBYSxDQUN0RGhDLGFBQWMsV0FDWixJQUFNVyxFQUFNcUIsR0FBWWpLLGNBQ3RCLDZCQUNBSCxNQUNGMkwsRUFBYXZGLFdBQVd4RixZQUFjLGVBQ3RDK0ssRUFBYWQsT0FDYk4sR0FDR3FCLFVBQVU3QyxHQUNWckgsTUFBSyxTQUFDQyxHQUNMLE9BQUlBLEVBQUlDLEdBQ0NELEVBQUlFLE9BRU5DLFFBQVFDLE9BQU8sVUFBREMsT0FBV0wsRUFBSU0sUUFDdEMsSUFDQ1AsTUFBSyxTQUFDNUMsR0FDTHdLLEdBQWE5SSxJQUFNMUIsRUFBS2tLLE9BQ3hCMkMsRUFBYXhHLE9BQ2YsSUFDQ2pELE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSUYsRUFDZCxHQUNKLElBRUZ3SixFQUFhZCxPQUNLLElBQUl2SSxFQUNwQixDQUNFaUIscUJBQXNCNkcsR0FBWWpLLGNBQ2hDLDBCQUVGc0Qsb0JBQXFCLHFCQUNyQkosZ0JBQWlCLDJCQUNqQkssTUFBTyw2QkFFVDBHLEdBQVlqSyxjQUFjLHlCQUdsQmtMLGtCQUNaLENBQ0YsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2plY3QvLi9zcmMvc2NyaXB0cy9DYXJkLmpzIiwid2VicGFjazovL3Byb2plY3QvLi9zcmMvc2NyaXB0cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3Byb2plY3QvLi9zcmMvc2NyaXB0cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3Byb2plY3QvLi9zcmMvc2NyaXB0cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdC8uL3NyYy9zY3JpcHRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJvamVjdC8uL3NyYy9zY3JpcHRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3Byb2plY3QvLi9zcmMvc2NyaXB0cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanMiLCJ3ZWJwYWNrOi8vcHJvamVjdC8uL3NyYy9zY3JpcHRzL1BvcHVwUHJvZmlsZUltYWdlLmpzIiwid2VicGFjazovL3Byb2plY3QvLi9zcmMvc2NyaXB0cy9BcGkuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIGRhdGEsXHJcbiAgICBjYXJkU2VsZWN0b3IsXHJcbiAgICB7IGhhbmRsZUNhcmRDbGljaywgaGFuZGxlQ2FyZENsb3NlLCBsaWtlcywgZGlzbGlrZXMsIG9iaiB9XHJcbiAgKSB7XHJcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZUNhcmRDbG9zZSA9IGhhbmRsZUNhcmRDbG9zZTtcclxuICAgIHRoaXMuX2xpa2VzID0gbGlrZXM7XHJcbiAgICB0aGlzLl9kaXNsaWtlcyA9IGRpc2xpa2VzO1xyXG4gICAgdGhpcy5fb2JqID0gb2JqO1xyXG4gIH1cclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgdGhpcy5fY2FyZFRlbXBsYXRlID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19jYXJkXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX2NhcmRUZW1wbGF0ZTtcclxuICB9XHJcblxyXG4gIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19pbWdcIikuc3JjID0gdGhpcy5fZGF0YS5saW5rO1xyXG4gICAgdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19pbWdcIikuYWx0ID0gdGhpcy5fZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX190aXRsZVwiKS50ZXh0Q29udGVudCA9IHRoaXMuX2RhdGEubmFtZTtcclxuICAgIHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fbGlrZXMtY291bnRlclwiKS50ZXh0Q29udGVudCA9XHJcbiAgICAgIHRoaXMuX2RhdGEubGlrZXMubGVuZ3RoO1xyXG4gICAgaWYgKHRoaXMuX2RhdGEub3duZXIuX2lkID09PSBcIjM4Y2MzMjNiZjgxZDY3NDM1NzUyYWY3OFwiKSB7XHJcbiAgICAgIGNvbnN0IHRyYXNoSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgIHRyYXNoSWNvbi5jbGFzc0xpc3QuYWRkKFwiZWxlbWVudHNfX3RyYXNoXCIpO1xyXG4gICAgICB0aGlzLl9jYXJkLmluc2VydEFkamFjZW50RWxlbWVudChcImFmdGVyYmVnaW5cIiwgdHJhc2hJY29uKTtcclxuICAgIH1cclxuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHJldHVybiB0aGlzLl9jYXJkO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW1hZ2UoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19pbWdcIik7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19faW1nXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljaygpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fY2FyZFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fbGlrZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jYXJkXHJcbiAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fbGlrZVwiKVxyXG4gICAgICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJlbGVtZW50c19fbGlrZS1maWxsXCIpO1xyXG4gICAgICAgIGNvbnN0IGxpa2VTdGF0dXMgPSB0aGlzLl9jYXJkXHJcbiAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fbGlrZVwiKVxyXG4gICAgICAgICAgLmNsYXNzTGlzdC5jb250YWlucyhcImVsZW1lbnRzX19saWtlLWZpbGxcIik7XHJcbiAgICAgICAgaWYgKGxpa2VTdGF0dXMpIHtcclxuICAgICAgICAgIHRoaXMuX2xpa2VzKHRoaXMuX29iailcclxuICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgICAgICAgdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19saWtlcy1jb3VudGVyXCIpLnRleHRDb250ZW50ID1cclxuICAgICAgICAgICAgICAgIGRhdGEubGlrZXMubGVuZ3RoO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLl9kaXNsaWtlcyh0aGlzLl9vYmopXHJcbiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICAgIHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fbGlrZXMtY291bnRlclwiKS50ZXh0Q29udGVudCA9XHJcbiAgICAgICAgICAgICAgICBkYXRhLmxpa2VzLmxlbmd0aDtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIGlmICh0aGlzLl9kYXRhLm93bmVyLl9pZCA9PT0gXCIzOGNjMzIzYmY4MWQ2NzQzNTc1MmFmNzhcIikge1xyXG4gICAgICB0aGlzLl9jYXJkXHJcbiAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudHNfX3RyYXNoXCIpXHJcbiAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xvc2UoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSwgZm9ybVNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBkYXRhLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IGRhdGEuc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbiA9IGRhdGEuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0ID0gZGF0YS5pbnB1dDtcclxuICAgIHRoaXMuX2Zvcm0gPSBmb3JtU2VsZWN0b3I7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXQsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dCkge1xyXG4gICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgfVxyXG5cclxuICBfdmFsaWRpdHlJbnB1dChpbnB1dCkge1xyXG4gICAgaWYgKCFpbnB1dC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dCwgaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3ZhbGlkaXR5QWxsSW5wdXRzKGlucHV0TGlzdCkge1xyXG4gICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF90b2dnbGVCdXR0b24oaW5wdXRMaXN0KSB7XHJcbiAgICBpZiAoIXRoaXMuX3ZhbGlkaXR5QWxsSW5wdXRzKGlucHV0TGlzdCkpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24gPSAoKSA9PiB7XHJcbiAgICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dCkpO1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uKGlucHV0TGlzdCk7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICBpbnB1dExpc3QuZm9yRWFjaCgoZWwpID0+IHtcclxuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl92YWxpZGl0eUlucHV0KGVsKTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b24oaW5wdXRMaXN0KTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9O1xyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgZGF0YSwgcmVuZGVyZXIgfSwgY2FyZHNDb250YWluZXIpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gZGF0YTtcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jYXJkc0NvbnRhaW5lciA9IGNhcmRzQ29udGFpbmVyO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jYXJkc0NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICBjb25zdCBpbnZlcnRlZEFycmF5ID0gdGhpcy5faXRlbXMucmV2ZXJzZSgpO1xyXG4gICAgaW52ZXJ0ZWRBcnJheS5mb3JFYWNoKChlbCkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihlbCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xyXG4gIH1cclxuXHJcbiAgb3BlbihlbGVtZW50KSB7XHJcbiAgICBjb25zdCBwYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wYWdlXCIpO1xyXG4gICAgcGFnZS5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnJlbW92ZSgpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlKGUpIHtcclxuICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgKGUpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UoZSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCB0YXJnZXQpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fcG9wdXBTZWxlY3RvciA9IHBvcHVwU2VsZWN0b3I7XHJcbiAgICB0aGlzLl90YXJnZXQgPSB0YXJnZXQ7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKFwiLmltYWdlLWNvbnRhaW5lcl9faW1nXCIpLnNyYyA9XHJcbiAgICAgIHRoaXMuX3RhcmdldC5zcmM7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIuaW1hZ2UtY29udGFpbmVyX19pbWdcIikuYWx0ID1cclxuICAgICAgdGhpcy5fdGFyZ2V0LmFsdDtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcIi5pbWFnZS1jb250YWluZXJfX3RpdGxlXCIpLnRleHRDb250ZW50ID1cclxuICAgICAgdGhpcy5fdGFyZ2V0LmFsdDtcclxuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHN1cGVyLm9wZW4odGhpcy5fcG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3JcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuaW1hZ2UtY29udGFpbmVyX19jbG9zZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgICAgaWYgKGUudGFyZ2V0ID09PSB0aGlzLl9wb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBkYXRhLCBzZXREYXRhIH0sIHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fcG9wdXBTZWxlY3RvciA9IHBvcHVwU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcclxuICAgIHRoaXMuX3NldERhdGEgPSBzZXREYXRhO1xyXG4gICAgdGhpcy5idXR0b25OYW1lID0gZGF0YS5idXR0b25OYW1lO1xyXG4gIH1cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHRoaXMuX3NldEZvcm0oKTtcclxuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHN1cGVyLm9wZW4odGhpcy5fcG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3Jlc2V0Rm9ybSgpO1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICB9XHJcblxyXG4gIF9zZXRGb3JtKCkge1xyXG4gICAgaWYgKHRoaXMuX2RhdGEudmFsdWVzKSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybS1pdGVtX25hbWVcIikudmFsdWUgPVxyXG4gICAgICAgIHRoaXMuX3NldERhdGEoKS5nZXRVc2VySW5mbygpLm5hbWU7XHJcblxyXG4gICAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0taXRlbV9pbmZvXCIpLnZhbHVlID1cclxuICAgICAgICB0aGlzLl9zZXREYXRhKCkuZ2V0VXNlckluZm8oKS5qb2I7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuX2RhdGEuaW5wdXRJbmZvKSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwU2VsZWN0b3JcclxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybS1pdGVtX2luZm9cIilcclxuICAgICAgICAuc2V0QXR0cmlidXRlKFwibWlubGVuZ3RoXCIsIFwiMlwiKTtcclxuICAgICAgdGhpcy5fcG9wdXBTZWxlY3RvclxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtLWl0ZW1faW5mb1wiKVxyXG4gICAgICAgIC5zZXRBdHRyaWJ1dGUoXCJtYXhsZW5ndGhcIiwgXCIyMDBcIik7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fcG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX190aXRsZVwiKS50ZXh0Q29udGVudCA9XHJcbiAgICAgIHRoaXMuX2RhdGEudGl0bGU7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0taXRlbV9uYW1lXCIpLnBsYWNlaG9sZGVyID1cclxuICAgICAgdGhpcy5fZGF0YS5wbGFjZWhvbGRlcjE7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0taXRlbV9pbmZvXCIpLnBsYWNlaG9sZGVyID1cclxuICAgICAgdGhpcy5fZGF0YS5wbGFjZWhvbGRlcjI7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0taXRlbV9pbmZvXCIpLnR5cGUgPVxyXG4gICAgICB0aGlzLl9kYXRhLnR5cGU7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0tYnV0dG9uXCIpLnRleHRDb250ZW50ID1cclxuICAgICAgdGhpcy5idXR0b25OYW1lO1xyXG5cclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3JcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0taXRlbV9uYW1lXCIpXHJcbiAgICAgIC5zZXRBdHRyaWJ1dGUoXCJtaW5sZW5ndGhcIiwgXCIyXCIpO1xyXG4gICAgdGhpcy5fcG9wdXBTZWxlY3RvclxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybS1pdGVtX25hbWVcIilcclxuICAgICAgLnNldEF0dHJpYnV0ZShcIm1heGxlbmd0aFwiLCBcIjQwXCIpO1xyXG4gICAgdGhpcy5fcG9wdXBTZWxlY3Rvci5jbGFzc0xpc3QuYWRkKFwicG9wdXBfX29wZW5lZFwiKTtcclxuICB9XHJcblxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybS1pdGVtX25hbWVcIikudmFsdWUsXHJcbiAgICAgIGxpbms6IHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybS1pdGVtX2luZm9cIikudmFsdWUsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgX3Jlc2V0Rm9ybSgpIHtcclxuICAgIGNvbnN0IHNwYW5MaXN0ID0gdGhpcy5fcG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19zcGFuLWVycm9yXCIpO1xyXG4gICAgc3Bhbkxpc3QuZm9yRWFjaCgoZWwpID0+IHtcclxuICAgICAgZWwudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgfSk7XHJcbiAgICBjb25zdCBpbnB1dExpc3QgPSB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2Zvcm0taXRlbVwiKTtcclxuICAgIGlucHV0TGlzdC5mb3JFYWNoKChlbCkgPT4ge1xyXG4gICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfX2Zvcm0taXRlbV9pbnZhbGlkXCIpO1xyXG4gICAgICBpZiAodGhpcy5fZGF0YS5yZXNldElucHV0cykge1xyXG4gICAgICAgIGVsLnZhbHVlID0gXCJcIjtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3JcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLl9kYXRhLnZhbHVlcykge1xyXG4gICAgICAgICAgdGhpcy5fc2V0RGF0YSgpLnNldFVzZXJJbmZvKCk7XHJcbiAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuX3NldERhdGEodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX3Jlc2V0Rm9ybSgpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yXHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jbG9zZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICBpZiAoZS50YXJnZXQgPT09IHRoaXMuX3BvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IsIHNldFVzZXIgfSwgcG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fbmFtZVNlbGVjdG9yID0gbmFtZVNlbGVjdG9yO1xyXG4gICAgdGhpcy5fam9iU2VsZWN0b3IgPSBqb2JTZWxlY3RvcjtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xyXG4gICAgdGhpcy5fc2V0VXNlciA9IHNldFVzZXI7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX25hbWVTZWxlY3Rvci50ZXh0Q29udGVudCxcclxuICAgICAgam9iOiB0aGlzLl9qb2JTZWxlY3Rvci50ZXh0Q29udGVudCxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbygpIHtcclxuICAgIHRoaXMuX25hbWVTZWxlY3Rvci50ZXh0Q29udGVudCA9IHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIucG9wdXBfX2Zvcm0taXRlbV9uYW1lXCJcclxuICAgICkudmFsdWU7XHJcbiAgICB0aGlzLl9qb2JTZWxlY3Rvci50ZXh0Q29udGVudCA9IHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIucG9wdXBfX2Zvcm0taXRlbV9pbmZvXCJcclxuICAgICkudmFsdWU7XHJcbiAgICB0aGlzLl9zZXRVc2VyKHRoaXMuX3BvcHVwU2VsZWN0b3IpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm1hdGlvbiBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCB7IGNhcmQsIGVsZW1lbnQsIHJlbW92ZUNhcmQgfSkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yID0gcG9wdXBTZWxlY3RvcjtcclxuICAgIHRoaXMuX2NhcmQgPSBjYXJkO1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQuX2NhcmQ7XHJcbiAgICB0aGlzLl9yZW1vdmVDYXJkID0gcmVtb3ZlQ2FyZDtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9fb3BlbmVkXCIpO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHN1cGVyLm9wZW4odGhpcy5fcG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBfZGVsZXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX3JlbW92ZUNhcmQodGhpcy5fY2FyZClcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXBTZWxlY3RvclxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5wb3B1cC1jb25maXJtX19idXR0b25cIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fZGVsZXRlQ2FyZCgpO1xyXG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3JcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtY29uZmlybV9fY2xvc2VcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFByb2ZpbGVJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCB7IG1vZGlmeUF2YXRhciB9KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xyXG4gICAgdGhpcy5fbW9kaWZ5QXZhdGFyID0gbW9kaWZ5QXZhdGFyO1xyXG4gICAgdGhpcy5idXR0b25OYW1lID0gdGhpcy5fcG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5wb3B1cC1wcm9maWxlX19idXR0b25cIlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9fb3BlbmVkXCIpO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHN1cGVyLm9wZW4odGhpcy5fcG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3Jlc2V0Rm9ybSgpO1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICB9XHJcblxyXG4gIF9yZXNldEZvcm0oKSB7XHJcbiAgICBjb25zdCBzcGFuID0gdGhpcy5fcG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5wb3B1cC1wcm9maWxlX19zcGFuLWVycm9yXCJcclxuICAgICk7XHJcbiAgICBzcGFuLnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgIGNvbnN0IGlucHV0ID0gdGhpcy5fcG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5wb3B1cC1wcm9maWxlX19mb3JtLWl0ZW1cIlxyXG4gICAgKTtcclxuICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9fZm9ybS1pdGVtX2ludmFsaWRcIik7XHJcbiAgICBpbnB1dC52YWx1ZSA9IFwiXCI7XHJcbiAgICB0aGlzLmJ1dHRvbk5hbWUudGV4dENvbnRlbnQgPSBcIkd1YXJkYXJcIjtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3JcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtcHJvZmlsZV9fY2xvc2VcIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9wb3B1cFNlbGVjdG9yXHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwLXByb2ZpbGVfX2J1dHRvblwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fbW9kaWZ5QXZhdGFyKCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL3dlYl9lc18xMlwiO1xyXG4gIH1cclxuXHJcbiAgc2V0UHJvZmlsZUluZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IFwiZTQyZjhlMjItOWNhMC00ODZlLWIyMTYtZWE5YTc3MWFmYTNhXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogXCJlNDJmOGUyMi05Y2EwLTQ4NmUtYjIxNi1lYTlhNzcxYWZhM2FcIixcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q2FyZChvYmopIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IFwiZTQyZjhlMjItOWNhMC00ODZlLWIyMTYtZWE5YTc3MWFmYTNhXCIsXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBvYmoubmFtZSxcclxuICAgICAgICBsaW5rOiBvYmoubGluayxcclxuICAgICAgfSksXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGdldEF2YXRhcih1cmwpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogXCJlNDJmOGUyMi05Y2EwLTQ4NmUtYjIxNi1lYTlhNzcxYWZhM2FcIixcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogdXJsLFxyXG4gICAgICB9KSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0TGlrZXMob2JqKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goXHJcbiAgICAgIGBodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL3dlYl9lc18xMi9jYXJkcy9saWtlcy8ke29iai5faWR9YCxcclxuICAgICAge1xyXG4gICAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICBhdXRob3JpemF0aW9uOiBcImU0MmY4ZTIyLTljYTAtNDg2ZS1iMjE2LWVhOWE3NzFhZmEzYVwiLFxyXG4gICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICBsaWtlczpcclxuICAgICAgICAgICAgb2JqLmxpa2VzID4gMFxyXG4gICAgICAgICAgICAgID8gb2JqLmxpa2VzLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgICBhYm91dDogb2JqLm93bmVyLmFib3V0LFxyXG4gICAgICAgICAgICAgICAgICBhdmF0YXI6IG9iai5vd25lci5hdmF0YXIsXHJcbiAgICAgICAgICAgICAgICAgIGNvaG9ydDogb2JqLm93bmVyLmNvaG9ydCxcclxuICAgICAgICAgICAgICAgICAgbmFtZTogb2JqLm93bmVyLm5hbWUsXHJcbiAgICAgICAgICAgICAgICAgIF9pZDogb2JqLm93bmVyLl9pZCxcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgOiB7XHJcbiAgICAgICAgICAgICAgICAgIGFib3V0OiBvYmoub3duZXIuYWJvdXQsXHJcbiAgICAgICAgICAgICAgICAgIGF2YXRhcjogb2JqLm93bmVyLmF2YXRhcixcclxuICAgICAgICAgICAgICAgICAgY29ob3J0OiBvYmoub3duZXIuY29ob3J0LFxyXG4gICAgICAgICAgICAgICAgICBuYW1lOiBvYmoub3duZXIubmFtZSxcclxuICAgICAgICAgICAgICAgICAgX2lkOiBvYmoub3duZXIuX2lkLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICB9KSxcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGdldERpc2xpa2VzKG9iaikge1xyXG4gICAgcmV0dXJuIGZldGNoKFxyXG4gICAgICBgaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS93ZWJfZXNfMTIvY2FyZHMvbGlrZXMvJHtvYmouX2lkfWAsXHJcbiAgICAgIHtcclxuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgYXV0aG9yaXphdGlvbjogXCJlNDJmOGUyMi05Y2EwLTQ4NmUtYjIxNi1lYTlhNzcxYWZhM2FcIixcclxuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVDYXJkKG9iaikge1xyXG4gICAgcmV0dXJuIGZldGNoKFxyXG4gICAgICBgaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS93ZWJfZXNfMTIvY2FyZHMvJHtvYmouX2lkfWAsXHJcbiAgICAgIHtcclxuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgYXV0aG9yaXphdGlvbjogXCJlNDJmOGUyMi05Y2EwLTQ4NmUtYjIxNi1lYTlhNzcxYWZhM2FcIixcclxuICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBzZXRVc2VyKHNlbGVjdG9yKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYGh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvd2ViX2VzXzEyL3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IFwiZTQyZjhlMjItOWNhMC00ODZlLWIyMTYtZWE5YTc3MWFmYTNhXCIsXHJcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBzZWxlY3Rvci5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtLWl0ZW1fbmFtZVwiKS52YWx1ZSxcclxuICAgICAgICBhYm91dDogc2VsZWN0b3IucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybS1pdGVtX2luZm9cIikudmFsdWUsXHJcbiAgICAgIH0pLFxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBDYXJkIGZyb20gXCIuL3NjcmlwdHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi9zY3JpcHRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4vc2NyaXB0cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi9zY3JpcHRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuL3NjcmlwdHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4vc2NyaXB0cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgXCIuL3N0eWxlcy9pbmRleC5jc3NcIjtcclxuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm1hdGlvbiBmcm9tIFwiLi9zY3JpcHRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBQcm9maWxlSW1hZ2UgZnJvbSBcIi4vc2NyaXB0cy9Qb3B1cFByb2ZpbGVJbWFnZS5qc1wiO1xyXG5pbXBvcnQgQXBpIGZyb20gXCIuL3NjcmlwdHMvQXBpLmpzXCI7XHJcblxyXG4vKlxyXG5NeSB0b2tlbjogZTQyZjhlMjItOWNhMC00ODZlLWIyMTYtZWE5YTc3MWFmYTNhXHJcbkdyb3B1IElEOiB3ZWJfZXNfMTJcclxuKi9cclxuXHJcbi8qIE1haW4gY29udGFpbmVyICovXHJcbmNvbnN0IHBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBhZ2VcIik7XHJcblxyXG5jb25zdCBpbWFnZVByb2ZpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb2ZpbGUtaW1hZ2VcIik7XHJcbmNvbnN0IGFkZFByb2ZpbGUgPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdFwiKTtcclxuY29uc3QgbmFtZVByb2ZpbGUgPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIik7XHJcbmNvbnN0IGhvYmJ5UHJvZmlsZSA9IHBhZ2UucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19ob2JieVwiKTtcclxuY29uc3QgYWRkSW1hZ2UgPSBwYWdlLnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkXCIpO1xyXG5cclxuLyogVGVtcGxhdGVzICovXHJcbmNvbnN0IHBvcHVwVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BvcHVwLXRlbXBsYXRlXCIpLmNvbnRlbnQ7XHJcbmNvbnN0IGltZ1RlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbWFnZS10ZW1wbGF0ZVwiKS5jb250ZW50O1xyXG5jb25zdCBwb3B1cENvbmZpcm1UZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIjcG9wdXAtY29uZmlybS10ZW1wbGF0ZVwiXHJcbikuY29udGVudDtcclxuY29uc3QgYXZhdGFyVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiI3BvcHVwLXByb2ZpbGUtdGVtcGxhdGVcIlxyXG4pLmNvbnRlbnQ7XHJcblxyXG4vKiBDbG9uZXMgKi9cclxuY29uc3QgcG9wdXBQcm9maWxlID0gcG9wdXBUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwXCIpLmNsb25lTm9kZSh0cnVlKTtcclxuY29uc3QgcG9wdXBJbWFnZSA9IHBvcHVwVGVtcGxhdGUucXVlcnlTZWxlY3RvcihcIi5wb3B1cFwiKS5jbG9uZU5vZGUodHJ1ZSk7XHJcbmNvbnN0IGltZ1BvcHVwID0gaW1nVGVtcGxhdGUucXVlcnlTZWxlY3RvcihcIi5pbWFnZS1wb3B1cFwiKS5jbG9uZU5vZGUodHJ1ZSk7XHJcbmNvbnN0IHBvcHVwQ29uZmlybSA9IHBvcHVwQ29uZmlybVRlbXBsYXRlXHJcbiAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtY29uZmlybVwiKVxyXG4gIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbmNvbnN0IHBvcHVwQXZhdGFyID0gYXZhdGFyVGVtcGxhdGVcclxuICAucXVlcnlTZWxlY3RvcihcIi5wb3B1cC1wcm9maWxlXCIpXHJcbiAgLmNsb25lTm9kZSh0cnVlKTtcclxuXHJcbi8qIFByb2ZpbGUgSW1hZ2UgKi9cclxuY29uc3QgcHJvZmlsZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2VcIik7XHJcbmNvbnN0IGNhcmRzID0gcGFnZS5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzXCIpO1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSgpO1xyXG5cclxuYXBpXHJcbiAgLnNldFByb2ZpbGVJbmZvKClcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH0pXHJcbiAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgIG5hbWVQcm9maWxlLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICAgaG9iYnlQcm9maWxlLnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcclxuICAgIGltYWdlUHJvZmlsZS5zcmMgPSBkYXRhLmF2YXRhcjtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gIH0pO1xyXG5cclxuLyogUmVuZGVyIENhcmRzICovXHJcblxyXG5hcGlcclxuICAuZ2V0SW5pdGlhbENhcmRzKClcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gIH0pXHJcbiAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgIGNvbnN0IHJlbmRlckNhcmRzID0gbmV3IFNlY3Rpb24oXHJcbiAgICAgIHtcclxuICAgICAgICBkYXRhLFxyXG4gICAgICAgIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGl0ZW0sIFwiI2NhcmQtdGVtcGxhdGVcIiwge1xyXG4gICAgICAgICAgICBoYW5kbGVDYXJkQ2xpY2s6ICgpID0+IHtcclxuICAgICAgICAgICAgICBjb25zdCBpbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShpbWdQb3B1cCwgY2FyZC5nZXRJbWFnZSgpKTtcclxuICAgICAgICAgICAgICBpbWFnZS5vcGVuKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGhhbmRsZUNhcmRDbG9zZTogKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnN0IHJlbW92ZUNhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24ocG9wdXBDb25maXJtLCB7XHJcbiAgICAgICAgICAgICAgICBjYXJkOiBpdGVtLFxyXG4gICAgICAgICAgICAgICAgZWxlbWVudDogY2FyZCxcclxuICAgICAgICAgICAgICAgIHJlbW92ZUNhcmQ6IGFwaS5kZWxldGVDYXJkLFxyXG4gICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIHJlbW92ZUNhcmRQb3B1cC5vcGVuKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGxpa2VzOiBhcGkuZ2V0TGlrZXMsXHJcbiAgICAgICAgICAgIGRpc2xpa2VzOiBhcGkuZ2V0RGlzbGlrZXMsXHJcbiAgICAgICAgICAgIG9iajogaXRlbSxcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGNvbnN0IGVsZW1lbnRDYXJkID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxuICAgICAgICAgIHJlbmRlckNhcmRzLmFkZEl0ZW0oZWxlbWVudENhcmQpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIGNhcmRzXHJcbiAgICApO1xyXG5cclxuICAgIHJlbmRlckNhcmRzLnJlbmRlckl0ZW1zKCk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyKTtcclxuICB9KTtcclxuXHJcbi8qIEV2ZW50IExpc3RlbmVycyAqL1xyXG5cclxucGFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICBpZiAoZS50YXJnZXQgPT09IGFkZFByb2ZpbGUpIHtcclxuICAgIGNvbnN0IHByb2ZpbGVGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgICAgIHtcclxuICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICB0aXRsZTogXCJFZGl0IHByb2ZpbGVcIixcclxuICAgICAgICAgIHBsYWNlaG9sZGVyMTogXCJOYW1lXCIsXHJcbiAgICAgICAgICBwbGFjZWhvbGRlcjI6IFwiSG9iYnlcIixcclxuICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxyXG4gICAgICAgICAgYnV0dG9uTmFtZTogXCJTYXZlXCIsXHJcbiAgICAgICAgICB2YWx1ZXM6IHRydWUsXHJcbiAgICAgICAgICByZXNldElucHV0czogZmFsc2UsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXREYXRhOiAoKSA9PiB7XHJcbiAgICAgICAgICBjb25zdCB1c2VyID0gbmV3IFVzZXJJbmZvKFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgbmFtZVNlbGVjdG9yOiBuYW1lUHJvZmlsZSxcclxuICAgICAgICAgICAgICBqb2JTZWxlY3RvcjogaG9iYnlQcm9maWxlLFxyXG4gICAgICAgICAgICAgIHNldFVzZXI6IGFwaS5zZXRVc2VyLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBwb3B1cFByb2ZpbGVcclxuICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgcmV0dXJuIHVzZXI7XHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgICAgcG9wdXBQcm9maWxlXHJcbiAgICApO1xyXG5cclxuICAgIHByb2ZpbGVGb3JtLm9wZW4oKTtcclxuICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKFxyXG4gICAgICB7XHJcbiAgICAgICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IHBvcHVwUHJvZmlsZS5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtLWJ1dHRvblwiKSxcclxuICAgICAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwLWJ0bi1kaXNhYmxlZFwiLFxyXG4gICAgICAgIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9fZm9ybS1pdGVtX2ludmFsaWRcIixcclxuICAgICAgICBpbnB1dDogXCIucG9wdXBfX2Zvcm0taXRlbVwiLFxyXG4gICAgICB9LFxyXG4gICAgICBwb3B1cFByb2ZpbGUucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKVxyXG4gICAgKTtcclxuICAgIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbiAgfVxyXG5cclxuICBpZiAoZS50YXJnZXQgPT09IGFkZEltYWdlKSB7XHJcbiAgICBjb25zdCBpbWFnZUZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICAgICAge1xyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgIHRpdGxlOiBcIk51ZXZvIEx1Z2FyXCIsXHJcbiAgICAgICAgICBwbGFjZWhvbGRlcjE6IFwiVMOtdHVsb1wiLFxyXG4gICAgICAgICAgcGxhY2Vob2xkZXIyOiBcIkVubGFjZSBkZSBsYSBpbWFnZW5cIixcclxuICAgICAgICAgIHR5cGU6IFwidXJsXCIsXHJcbiAgICAgICAgICBidXR0b25OYW1lOiBcIkNyZWFyXCIsXHJcbiAgICAgICAgICByZXNldElucHV0czogdHJ1ZSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldERhdGE6IChvYmopID0+IHtcclxuICAgICAgICAgIGNvbnN0IGFkZENhcmQgPSBuZXcgU2VjdGlvbihcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgIGRhdGE6IFtvYmpdLFxyXG4gICAgICAgICAgICAgIHJlbmRlcmVyOiAob2JqKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoT2JqZWN0LnZhbHVlcyhvYmopLmV2ZXJ5KChlbCkgPT4gZWwubGVuZ3RoICE9PSAwKSkge1xyXG4gICAgICAgICAgICAgICAgICBpbWFnZUZvcm0uYnV0dG9uTmFtZSA9IFwiR3VhcmRhbmRvLi4uXCI7XHJcbiAgICAgICAgICAgICAgICAgIGltYWdlRm9ybS5vcGVuKCk7XHJcbiAgICAgICAgICAgICAgICAgIGFwaVxyXG4gICAgICAgICAgICAgICAgICAgIC5nZXRDYXJkKG9iailcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChkYXRhLCBcIiNjYXJkLXRlbXBsYXRlXCIsIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlQ2FyZENsaWNrOiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbWdQb3B1cCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcmQuZ2V0SW1hZ2UoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2Uub3BlbigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVDYXJkQ2xvc2U6ICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZW1vdmVDYXJkID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbihcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvcHVwQ29uZmlybSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FyZDogZGF0YSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogY2FyZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtb3ZlQ2FyZDogYXBpLmRlbGV0ZUNhcmQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVDYXJkLm9wZW4oKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGlrZXM6IGFwaS5nZXRMaWtlcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzbGlrZXM6IGFwaS5nZXREaXNsaWtlcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgb2JqOiBkYXRhLFxyXG4gICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50Q2FyZCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICBhZGRDYXJkLmFkZEl0ZW0oZWxlbWVudENhcmQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgaW1hZ2VGb3JtLmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBjYXJkc1xyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIGFkZENhcmQucmVuZGVySXRlbXMoKTtcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgICBwb3B1cEltYWdlXHJcbiAgICApO1xyXG4gICAgaW1hZ2VGb3JtLm9wZW4oKTtcclxuXHJcbiAgICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICAgICAge1xyXG4gICAgICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBwb3B1cEltYWdlLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm0tYnV0dG9uXCIpLFxyXG4gICAgICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXAtYnRuLWRpc2FibGVkXCIsXHJcbiAgICAgICAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19mb3JtLWl0ZW1faW52YWxpZFwiLFxyXG4gICAgICAgIGlucHV0OiBcIi5wb3B1cF9fZm9ybS1pdGVtXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIHBvcHVwSW1hZ2UucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKVxyXG4gICAgKTtcclxuXHJcbiAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4gIH1cclxuXHJcbiAgaWYgKGUudGFyZ2V0ID09PSBwcm9maWxlQXZhdGFyKSB7XHJcbiAgICBjb25zdCBjaGFuZ2VBdmF0YXIgPSBuZXcgUG9wdXBQcm9maWxlSW1hZ2UocG9wdXBBdmF0YXIsIHtcclxuICAgICAgbW9kaWZ5QXZhdGFyOiAoKSA9PiB7XHJcbiAgICAgICAgY29uc3QgdXJsID0gcG9wdXBBdmF0YXIucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgIFwiLnBvcHVwLXByb2ZpbGVfX2Zvcm0taXRlbVwiXHJcbiAgICAgICAgKS52YWx1ZTtcclxuICAgICAgICBjaGFuZ2VBdmF0YXIuYnV0dG9uTmFtZS50ZXh0Q29udGVudCA9IFwiR3VhcmRhbmRvLi4uXCI7XHJcbiAgICAgICAgY2hhbmdlQXZhdGFyLm9wZW4oKTtcclxuICAgICAgICBhcGlcclxuICAgICAgICAgIC5nZXRBdmF0YXIodXJsKVxyXG4gICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgICAgIGltYWdlUHJvZmlsZS5zcmMgPSBkYXRhLmF2YXRhcjtcclxuICAgICAgICAgICAgY2hhbmdlQXZhdGFyLmNsb3NlKCk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcbiAgICBjaGFuZ2VBdmF0YXIub3BlbigpO1xyXG4gICAgY29uc3QgdmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgICAgIHtcclxuICAgICAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogcG9wdXBBdmF0YXIucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgIFwiLnBvcHVwLXByb2ZpbGVfX2J1dHRvblwiXHJcbiAgICAgICAgKSxcclxuICAgICAgICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwLWJ0bi1kaXNhYmxlZFwiLFxyXG4gICAgICAgIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9fZm9ybS1pdGVtX2ludmFsaWRcIixcclxuICAgICAgICBpbnB1dDogXCIucG9wdXAtcHJvZmlsZV9fZm9ybS1pdGVtXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIHBvcHVwQXZhdGFyLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXAtcHJvZmlsZV9fZm9ybVwiKVxyXG4gICAgKTtcclxuXHJcbiAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4gIH1cclxufSk7XHJcbiJdLCJuYW1lcyI6WyJDYXJkIiwiZGF0YSIsImNhcmRTZWxlY3RvciIsIl9yZWYiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVDYXJkQ2xvc2UiLCJsaWtlcyIsImRpc2xpa2VzIiwib2JqIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9kYXRhIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlQ2FyZENsb3NlIiwiX2xpa2VzIiwiX2Rpc2xpa2VzIiwiX29iaiIsImtleSIsInZhbHVlIiwiX2NhcmRUZW1wbGF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfY2FyZCIsIl9nZXRUZW1wbGF0ZSIsInNyYyIsImxpbmsiLCJhbHQiLCJuYW1lIiwidGV4dENvbnRlbnQiLCJsZW5ndGgiLCJvd25lciIsIl9pZCIsInRyYXNoSWNvbiIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJzZXRFdmVudExpc3RlbmVycyIsIl90aGlzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZ2dsZSIsImNvbnRhaW5zIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJjb25jYXQiLCJzdGF0dXMiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJGb3JtVmFsaWRhdG9yIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwiX2Zvcm0iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2lucHV0IiwiX3RvZ2dsZUJ1dHRvbiIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImZvckVhY2giLCJlbCIsIl92YWxpZGl0eUlucHV0IiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9zdWJtaXRCdXR0b24iLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbiIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dCIsImVycm9yTWVzc2FnZSIsImlkIiwicmVtb3ZlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwic29tZSIsImlucHV0RWxlbWVudCIsIl92YWxpZGl0eUFsbElucHV0cyIsImRpc2FibGVkIiwiU2VjdGlvbiIsImNhcmRzQ29udGFpbmVyIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY2FyZHNDb250YWluZXIiLCJlbGVtZW50IiwicHJlcGVuZCIsInJldmVyc2UiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBTZWxlY3RvciIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9oYW5kbGVFc2NDbG9zZSIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwidGFyZ2V0IiwiX2NhbGxTdXBlciIsIl90YXJnZXQiLCJfaW5oZXJpdHMiLCJfZ2V0IiwiX2dldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIiwiY2FsbCIsIl90aGlzMiIsIlBvcHVwV2l0aEZvcm0iLCJzZXREYXRhIiwiX3NldERhdGEiLCJidXR0b25OYW1lIiwiX3NldEZvcm0iLCJfcmVzZXRGb3JtIiwidmFsdWVzIiwiZ2V0VXNlckluZm8iLCJqb2IiLCJpbnB1dEluZm8iLCJzZXRBdHRyaWJ1dGUiLCJ0aXRsZSIsInBsYWNlaG9sZGVyIiwicGxhY2Vob2xkZXIxIiwicGxhY2Vob2xkZXIyIiwidHlwZSIsInJlc2V0SW5wdXRzIiwiX3RoaXMzIiwic2V0VXNlckluZm8iLCJfZ2V0SW5wdXRWYWx1ZXMiLCJVc2VySW5mbyIsIm5hbWVTZWxlY3RvciIsImpvYlNlbGVjdG9yIiwic2V0VXNlciIsIl9uYW1lU2VsZWN0b3IiLCJfam9iU2VsZWN0b3IiLCJfc2V0VXNlciIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsImNhcmQiLCJyZW1vdmVDYXJkIiwiX2VsZW1lbnQiLCJfcmVtb3ZlQ2FyZCIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9kZWxldGVDYXJkIiwiUG9wdXBQcm9maWxlSW1hZ2UiLCJtb2RpZnlBdmF0YXIiLCJfbW9kaWZ5QXZhdGFyIiwiQXBpIiwiX2Jhc2VVcmwiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cmwiLCJhdmF0YXIiLCJwdXNoIiwiYWJvdXQiLCJjb2hvcnQiLCJzZWxlY3RvciIsInBhZ2UiLCJpbWFnZVByb2ZpbGUiLCJnZXRFbGVtZW50QnlJZCIsImFkZFByb2ZpbGUiLCJuYW1lUHJvZmlsZSIsImhvYmJ5UHJvZmlsZSIsImFkZEltYWdlIiwicG9wdXBUZW1wbGF0ZSIsImltZ1RlbXBsYXRlIiwicG9wdXBDb25maXJtVGVtcGxhdGUiLCJhdmF0YXJUZW1wbGF0ZSIsInBvcHVwUHJvZmlsZSIsInBvcHVwSW1hZ2UiLCJpbWdQb3B1cCIsInBvcHVwQ29uZmlybSIsInBvcHVwQXZhdGFyIiwicHJvZmlsZUF2YXRhciIsImNhcmRzIiwiYXBpIiwic2V0UHJvZmlsZUluZm8iLCJnZXRJbml0aWFsQ2FyZHMiLCJyZW5kZXJDYXJkcyIsIml0ZW0iLCJnZXRJbWFnZSIsIm9wZW4iLCJkZWxldGVDYXJkIiwiZ2V0TGlrZXMiLCJnZXREaXNsaWtlcyIsImVsZW1lbnRDYXJkIiwiZ2VuZXJhdGVDYXJkIiwiYWRkSXRlbSIsInJlbmRlckl0ZW1zIiwiZW5hYmxlVmFsaWRhdGlvbiIsImltYWdlRm9ybSIsImFkZENhcmQiLCJPYmplY3QiLCJldmVyeSIsImdldENhcmQiLCJjaGFuZ2VBdmF0YXIiLCJnZXRBdmF0YXIiXSwic291cmNlUm9vdCI6IiJ9